--------------------------------------------------------
-- Creating Schema
--------------------------------------------------------
CREATE SCHEMA `demo`;
USE `demo` ;

-- Creating Tables

-- -----------------------------------------------------
-- Table `newgymdb`.`trainers`
-- -----------------------------------------------------
CREATE TABLE `trainers` (
    `T_ID` INT NOT NULL AUTO_INCREMENT,
    `T_NAME` VARCHAR(45) NOT NULL,
    `T_GENDER` CHAR(1) NULL DEFAULT NULL,
    `T_JOINDATE` DATE NOT NULL,
    `T_EMAIL` VARCHAR(20) NOT NULL,
    `T_MOB_NO` VARCHAR(15) NOT NULL,
    `T_LOCATION` VARCHAR(15) NULL DEFAULT NULL,

    PRIMARY KEY (`T_ID`),
    UNIQUE (`T_EMAIL`) ,
    UNIQUE (`T_MOB_NO`)
);

-- -----------------------------------------------------
-- Table `newgymdb`.`exercise`
-- -----------------------------------------------------
CREATE TABLE `exercise` (
    `E_ID` INT NOT NULL AUTO_INCREMENT,
    `E_NAME` VARCHAR(15) NOT NULL,
    `E_TYPE` VARCHAR(15) NULL DEFAULT NULL,
    `E_TIMESLOT` TIME NOT NULL,
    PRIMARY KEY (`E_ID`)
);


-- -----------------------------------------------------
-- Table `newgymdb`.`conducts`
-- -----------------------------------------------------
CREATE TABLE `conducts` (
    `TR_ID` INT NOT NULL,
    `EX_ID` INT NOT NULL,

    PRIMARY KEY (`TR_ID`, `EX_ID`),

    FOREIGN KEY (`TR_ID`) REFERENCES `trainers` (`T_ID`)
    ON DELETE CASCADE,

    FOREIGN KEY (`EX_ID`) REFERENCES `exercise` (`E_ID`)
    ON DELETE CASCADE
);


-- -----------------------------------------------------
-- Table `newgymdb`.`package`
-- -----------------------------------------------------
CREATE TABLE `package` (
    `P_ID` INT NOT NULL AUTO_INCREMENT,
    `P_NAME` VARCHAR(15) NOT NULL,
    `P_PRICE` INT NOT NULL,
    `P_DURATION` INT NOT NULL,
    PRIMARY KEY (`P_ID`)
);


-- -----------------------------------------------------
-- Table `newgymdb`.`consists`
-- -----------------------------------------------------
CREATE TABLE `consists` (
    `PK_ID` INT NOT NULL,
    `EX_ID` INT NOT NULL,

    PRIMARY KEY (`PK_ID`, `EX_ID`),

    FOREIGN KEY (`PK_ID`) REFERENCES `package` (`P_ID`)
    ON DELETE CASCADE,

    FOREIGN KEY (`EX_ID`) REFERENCES `exercise` (`E_ID`)
    ON DELETE CASCADE
);

-- -----------------------------------------------------
-- Table `newgymdb`.`equipments`
-- -----------------------------------------------------
CREATE TABLE `equipments` (
    `EQ_ID` INT NOT NULL AUTO_INCREMENT,
    `EQ_NAME` VARCHAR(15) NOT NULL,
    `EQ_QTY` INT NULL DEFAULT NULL,
    `EQ_COST` FLOAT NULL DEFAULT NULL,
    PRIMARY KEY (`EQ_ID`)
);

-- -----------------------------------------------------
-- Table `newgymdb`.`members`
-- -----------------------------------------------------
CREATE TABLE `members` (
    `M_ID` INT NOT NULL AUTO_INCREMENT,
    `M_NAME` VARCHAR(15) NOT NULL,
    `M_GENDER` CHAR(1) NULL DEFAULT NULL,
    `M_DOB` DATE NOT NULL,
    `M_WEIGHT` FLOAT NULL DEFAULT NULL,
    `M_HEIGHT` FLOAT NULL DEFAULT NULL,
    `M_EMAIL` VARCHAR(20) NOT NULL,
    `M_MOB_NO` VARCHAR(15) NOT NULL,
    `M_JOINDATE` DATE NOT NULL,
    `M_LOCATION` VARCHAR(15) NULL DEFAULT NULL,
    `TR_ID` INT NULL DEFAULT NULL,
    `PK_ID` INT NULL DEFAULT NULL,

    PRIMARY KEY (`M_ID`),
    UNIQUE (`M_EMAIL`),
    UNIQUE (`M_MOB_NO`),

    FOREIGN KEY (`TR_ID`) REFERENCES `trainers` (`T_ID`)
    ON DELETE SET NULL,

    FOREIGN KEY (`PK_ID`) REFERENCES `package` (`P_ID`)
    ON DELETE SET NULL
);


-- -----------------------------------------------------
-- Table `newgymdb`.`takeup`
-- -----------------------------------------------------
CREATE TABLE `takeup` (
    `MEM_ID` INT NOT NULL,
    `EX_ID` INT NOT NULL,
    PRIMARY KEY (`MEM_ID`, `EX_ID`),

    FOREIGN KEY (`MEM_ID`) REFERENCES `members` (`M_ID`)
    ON DELETE CASCADE,

    FOREIGN KEY (`EX_ID`) REFERENCES `exercise` (`E_ID`)
    ON DELETE CASCADE
);

-- -----------------------------------------------------
-- Table `newgymdb`.`trainer_spec`
-- -----------------------------------------------------
CREATE TABLE `trainer_spec` (
    `T_SPEC` VARCHAR(15) NOT NULL,
    `TR_ID` INT NOT NULL,
    PRIMARY KEY (`T_SPEC`, `TR_ID`),

    FOREIGN KEY (`TR_ID`) REFERENCES `trainers` (`T_ID`)
    ON DELETE CASCADE
);

-- -----------------------------------------------------
-- Table `newgymdb`.`uses`
-- -----------------------------------------------------
CREATE TABLE `uses` (
    `MEM_ID` INT NOT NULL,
    `EQP_ID` INT NOT NULL,
    PRIMARY KEY (`MEM_ID`, `EQP_ID`),

    FOREIGN KEY (`MEM_ID`) REFERENCES `members` (`M_ID`)
    ON DELETE CASCADE,

    FOREIGN KEY (`EQP_ID`) REFERENCES `equipments` (`EQ_ID`)
    ON DELETE CASCADE
);

-- Insertion

-- Trainers

INSERT INTO TRAINERS VALUES(1, 'JACK TERBY' ,'M' ,'2022-01-11' ,'jackterby@gmail.com' , '1234567890' , 'DELHI');
INSERT INTO TRAINERS VALUES(2, 'TOM','M','2022-01-11','tom123@gmail.com','6545432319','DELHI');
INSERT INTO TRAINERS VALUES(3, 'VIMAL','M','2022-01-11','vimal@gmail.com','9897876565','CHENNAI');
INSERT INTO TRAINERS VALUES(4, 'ASMI','F','2022-01-11','asmi@gmail.com','4657687934','GOA');
INSERT INTO TRAINERS VALUES(5, 'CHITRA','F','2022-01-11','chitra2002@gmail.com','1276514236','BANGALORE');

-- Trainers Spec

INSERT INTO TRAINER_SPEC VALUES ('STRENGTH',1);
INSERT INTO TRAINER_SPEC VALUES ('AEROBIC',1);
INSERT INTO TRAINER_SPEC VALUES ('BALANCE',1);
INSERT INTO TRAINER_SPEC VALUES ('STRETCHING',1);
INSERT INTO TRAINER_SPEC VALUES ('BALANCE',2);
INSERT INTO TRAINER_SPEC VALUES ('STRETCHING',2);
INSERT INTO TRAINER_SPEC VALUES ('AEROBIC',3);
INSERT INTO TRAINER_SPEC VALUES ('MUSCULAR',4);
INSERT INTO TRAINER_SPEC VALUES ('STRETCHING',4);
INSERT INTO TRAINER_SPEC VALUES ('BALANCE',5);
INSERT INTO TRAINER_SPEC VALUES ('Yoga',5);

-- Packages

INSERT INTO PACKAGE VALUES (1,'SILVER',1000,3);
INSERT INTO PACKAGE VALUES (2,'STAR SILVER',2000,6);
INSERT INTO PACKAGE VALUES (3,'GOLD',2000,6);
INSERT INTO PACKAGE VALUES (4,'STAR GOLD',4000,12);
INSERT INTO PACKAGE VALUES (5,'PLATINUM',3000,12);
INSERT INTO PACKAGE VALUES (6,'STAR PLATINUM',6000,24);
INSERT INTO PACKAGE VALUES (7,'SILVER STAR',1024,5);
INSERT INTO PACKAGE VALUES (8,'testpack',123,12);

-- Exercises

ALTER TABLE EXERCISE MODIFY E_NAME VARCHAR(30);
ALTER TABLE EXERCISE MODIFY E_TYPE VARCHAR(30);

INSERT INTO EXERCISE VALUES (1,'MOUNTAIN POSE','YOGA','08:00:00');
INSERT INTO EXERCISE VALUES (2,'TREE POSE','YOGA','02:00:00');
INSERT INTO EXERCISE VALUES (3,'HAMSTRING STRETCH','STRETCHING ','03:30:00');
INSERT INTO EXERCISE VALUES (4,'SHOULDER STRETCH','STRETCHING','04:00:00');
INSERT INTO EXERCISE VALUES (5,'RUNNING','CARDIO','05:00:02');
INSERT INTO EXERCISE VALUES (6,'JOGGING ','CARDIO','06:00:00');
INSERT INTO EXERCISE VALUES (7,'PULL UPS','WEIGHT TRAINING','19:30:00');
INSERT INTO EXERCISE VALUES (8,'DEAD LIFT','WEIGHT TRAINING','20:00:00');


-- Equipments

ALTER TABLE EQUIPMENTS MODIFY EQ_NAME VARCHAR(30);

INSERT INTO EQUIPMENTS VALUES (1,'BACK EXTENSION MACHINE',15,750.0);
INSERT INTO EQUIPMENTS VALUES (2,'BICEP CURL MACHINE',13,705.0);
INSERT INTO EQUIPMENTS VALUES (3,'SHOULDER PRESS MACHINE',12,750.0);
INSERT INTO EQUIPMENTS VALUES (4,'TRICEPS PRESS MACHINE',15,800.0);
INSERT INTO EQUIPMENTS VALUES (5,'LEG PRESS MACHINE',10,1800.0);
INSERT INTO EQUIPMENTS VALUES (6,'CHEST PRESS MACHINE',15,500.0);


-- Members

INSERT INTO MEMBERS VALUES (1,'JAMES','M','2003-12-12',50.0,170.0,'james@gmail.com',4543232187,'2021-03-03','BANGALORE',1,6);
INSERT INTO MEMBERS VALUES (2,'ROCK','M','2002-01-12',50.0,170.0,'rock@gmail.com',1357908765,'2021-03-03','DELHI',1,6);
INSERT INTO MEMBERS VALUES (3,'RAJESH','M','2001-06-11',70.0,150.0,'rajesh@gmail.com',45635342321,'2021-02-13','BANGALORE',3,4);
INSERT INTO MEMBERS VALUES (4,'RAM','M','2001-05-19',45.0,145.0,'ram@gmail.com',6574534231,'2020-09-17','GOA',2,5);
INSERT INTO MEMBERS VALUES (5,'ARYA','F','2001-10-10',50.0,135.0,'arya@gmail.com',8987675643,'2020-09-17','DELHI',4,5);
INSERT INTO MEMBERS VALUES (6,'JESSY','F','2001-10-10',70.0,145.0,'jessy@gmail.com',8987885643,'2020-09-12','HYDERABAD',5,1);
INSERT INTO MEMBERS VALUES (7,'AKSHAY','M','2001-11-11',70.0,155.0,'akshay@gmail.com',6453987652,'2021-09-12','CHENNAI',2,3);
INSERT INTO MEMBERS VALUES (8,'ARUN','M','2001-11-18',60.0,165.0,'arun@gmail.com',6433987652,'2021-04-12','CHENNAI',2,3);

-- Takeup

INSERT INTO TAKEUP VALUES (1,1);
INSERT INTO TAKEUP VALUES (2,2);
INSERT INTO TAKEUP VALUES (3,3);
INSERT INTO TAKEUP VALUES (4,4);
INSERT INTO TAKEUP VALUES (5,5);
INSERT INTO TAKEUP VALUES (6,6);
INSERT INTO TAKEUP VALUES (7,7);
INSERT INTO TAKEUP VALUES (8,8);
INSERT INTO TAKEUP VALUES (3,4);
INSERT INTO TAKEUP VALUES (6,1);

-- Uses

INSERT INTO USES VALUES (1,1);
INSERT INTO USES VALUES (1,2);
INSERT INTO USES VALUES (1,3);
INSERT INTO USES VALUES (2,3);
INSERT INTO USES VALUES (5,3);
INSERT INTO USES VALUES (2,4);
INSERT INTO USES VALUES (5,5);
INSERT INTO USES VALUES (4,4);
INSERT INTO USES VALUES (6,2);
INSERT INTO USES VALUES (6,4);

 -- Consists

INSERT INTO CONSISTS VALUES (1,1);
INSERT INTO CONSISTS VALUES (1,2);
INSERT INTO CONSISTS VALUES (1,3);
INSERT INTO CONSISTS VALUES (2,4);
INSERT INTO CONSISTS VALUES (3,5);
INSERT INTO CONSISTS VALUES (4,6);
INSERT INTO CONSISTS VALUES (6,8);
INSERT INTO CONSISTS VALUES (4,3);
INSERT INTO CONSISTS VALUES (6,5);
INSERT INTO CONSISTS VALUES (5,5);

-- Conducts

INSERT INTO CONDUCTS VALUES (1,1);
INSERT INTO CONDUCTS VALUES (1,3);
INSERT INTO CONDUCTS VALUES (1,5);
INSERT INTO CONDUCTS VALUES (1,7);
INSERT INTO CONDUCTS VALUES (2,2);
INSERT INTO CONDUCTS VALUES (2,4);
INSERT INTO CONDUCTS VALUES (3,8);
INSERT INTO CONDUCTS VALUES (4,1);
INSERT INTO CONDUCTS VALUES (4,6);
INSERT INTO CONDUCTS VALUES (5,7);

-- Select Statements

SELECT * FROM TRAINERS;
SELECT * FROM TRAINER_SPEC;
SELECT * FROM PACKAGE;
SELECT * FROM MEMBERS;
SELECT * FROM EQUIPMENTS;
SELECT * FROM EXERCISE;
SELECT * FROM TAKEUP;
SELECT * FROM USES;
SELECT * FROM CONDUCTS;
SELECT * FROM CONSISTS;

-- QUERIES

-- 1) List all Exercises conducted by trainer ''

SELECT E_NAME
FROM EXERCISE
WHERE E_ID
IN (SELECT ALL EX_ID FROM CONDUCTS WHERE TR_ID  = ( SELECT T_ID FROM TRAINERS WHERE T_NAME='JACK TERBY'));

-- 2) count total members

SELECT DISTINCT COUNT(M.M_ID)
FROM MEMBERS M ;

-- 3) MEMBER names who are TRAINED under TOM

SELECT M_NAME
FROM MEMBERS
WHERE TR_ID IN (SELECT T_ID FROM TRAINERS WHERE T_NAME='TOM');

-- 4) count MEMBER names who are TRAINED under TOM
SELECT COUNT(M_ID) FROM MEMBERS WHERE TR_ID IN (SELECT T_ID FROM TRAINERS WHERE T_NAME='TOM');

-- 5) Members who have sub to gold pacakage

SELECT M_NAME
FROM MEMBERS
WHERE PK_ID IN (SELECT P_ID FROM PACKAGE WHERE P_NAME='GOLD');

-- 6) Give names of TRAINERS with their specialization

SELECT T.T_ID  , T.T_NAME  , TS.T_SPEC FROM TRAINERS T
JOIN TRAINER_SPEC TS
WHERE TS.TR_ID=T.T_ID;

-- 7) list all exercise in SILVER PACKAGE

SELECT * FROM EXERCISE WHERE E_ID IN (
    SELECT ALL EX_ID FROM CONSISTS WHERE PK_ID = (
        SELECT P_ID FROM PACKAGE WHERE P_NAME = 'SILVER'
    )
);

-- 8) List the names of members with their PACKAGES
SELECT M.M_NAME , P.P_NAME FROM MEMBERS M
JOIN PACKAGE P
WHERE M.PK_ID = P.P_ID;

-- 9) List the EQUIPMENTS not used by anyone
SELECT EQ_NAME FROM EQUIPMENTS WHERE EQ_ID NOT IN (SELECT DISTINCT(EQP_ID) FROM USES);

-- 10) DISPLAY E_NAMES CONDUCTED BY TRAINER 'JACK TERBY'
SELECT EXERCISE.E_NAME , TRAINERS.T_NAME
FROM CONDUCTS
INNER JOIN EXERCISE ON CONDUCTS.EX_ID=EXERCISE.E_ID
INNER JOIN TRAINERS ON TRAINERS.T_ID=CONDUCTS.TR_ID
WHERE T_NAME = 'JACK TERBY';

-- 11) DISPLAY E_NAME CONTAINED IN 'SILVER' PACKAGE
SELECT EXERCISE.E_NAME , PACKAGE.P_NAME , CONSISTS.PK_ID
FROM CONSISTS
JOIN EXERCISE ON CONSISTS.EX_ID = EXERCISE.E_ID
JOIN PACKAGE ON CONSISTS.PK_ID = PACKAGE.P_ID
WHERE P_NAME = 'SILVER';

-- 12) DISPLAY E_NAME TAKEN UP BY MEMBER 'RAJESH'
SELECT EXERCISE.E_NAME , MEMBERS.M_NAME , TAKEUP.MEM_ID
FROM TAKEUP
INNER JOIN EXERCISE ON TAKEUP.EX_ID=EXERCISE.E_ID
INNER JOIN MEMBERS ON TAKEUP.MEM_ID = MEMBERS.M_ID
WHERE M_NAME = 'RAJESH';

-- 13) DISPLAY EQP_NAMES USED BY  MEMBER 'JAMES'
SELECT EQUIPMENTS.EQ_NAME , MEMBERS.M_NAME , USES.MEM_ID
FROM USES
INNER JOIN EQUIPMENTS ON USES.EQP_ID = EQUIPMENTS.EQ_ID
INNER JOIN MEMBERS ON USES.MEM_ID = MEMBERS.M_ID
WHERE M_NAME = 'JAMES';

-- 14) DISPLAY MEM_NAMES WHO USE  EQUIPMENT 'BACK EXTENSION MACHINE'
SELECT  MEMBERS.M_NAME ,EQUIPMENTS.EQ_NAME , USES.EQP_ID
FROM USES
INNER JOIN EQUIPMENTS ON USES.EQP_ID = EQUIPMENTS.EQ_ID
INNER JOIN MEMBERS ON USES.MEM_ID = MEMBERS.M_ID
WHERE EQ_NAME = 'BACK EXTENSION MACHINE';

-- 15) Slect top 5 recently joined members
SELECT * FROM demo.members order by members.M_JOINDATE DESC limit 5;

-- 16) Display age of all members
SELECT DATE_FORMAT(FROM_DAYS(DATEDIFF(now(),M_DOB)), '%Y')+0  AS Age from members;